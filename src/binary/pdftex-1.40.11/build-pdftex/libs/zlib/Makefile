# Makefile.in generated by automake 1.11.1 from Makefile.am.
# Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008, 2009  Free Software Foundation,
# Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



VPATH = /home/dmonad/git/_test2/src/binary/pdftex-1.40.11/src/libs/zlib
pkgdatadir = $(datadir)/zlib-for-tex-live
pkgincludedir = $(includedir)/zlib-for-tex-live
pkglibdir = $(libdir)/zlib-for-tex-live
pkglibexecdir = $(libexecdir)/zlib-for-tex-live
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
am__append_1 = \
	$(ZLIB_TREE)/gzio.c

#am__append_2 = \
#	$(ZLIB_TREE)/gzclose.c \
#	$(ZLIB_TREE)/gzguts.h \
#	$(ZLIB_TREE)/gzlib.c \
#	$(ZLIB_TREE)/gzread.c \
#	$(ZLIB_TREE)/gzwrite.c

#check_PROGRAMS = example$(EXEEXT) minigzip$(EXEEXT)
subdir = .
DIST_COMMON = README $(am__configure_deps) \
	$(am__dist_check_SCRIPTS_DIST) \
	$(srcdir)/../../build-aux/depcomp \
	$(srcdir)/../../build-aux/install-sh \
	$(srcdir)/../../build-aux/missing $(srcdir)/Makefile.am \
	$(srcdir)/Makefile.in $(srcdir)/config.h.in \
	$(top_srcdir)/configure ../../build-aux/config.guess \
	../../build-aux/config.sub ../../build-aux/depcomp \
	../../build-aux/install-sh ../../build-aux/ltmain.sh \
	../../build-aux/missing ../../build-aux/texinfo.tex \
	../../build-aux/ylwrap ChangeLog
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
am__CONFIG_DISTCLEAN_FILES = config.status config.cache config.log \
 configure.lineno config.status.lineno
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
LIBRARIES = $(noinst_LIBRARIES)
AR = ar
ARFLAGS = cru
libz_a_AR = $(AR) $(ARFLAGS)
libz_a_LIBADD =
am__objects_1 = gzio.$(OBJEXT)
#am__objects_2 = gzclose.$(OBJEXT) gzlib.$(OBJEXT) \
#	gzread.$(OBJEXT) gzwrite.$(OBJEXT)
nodist_libz_a_OBJECTS = adler32.$(OBJEXT) compress.$(OBJEXT) \
	crc32.$(OBJEXT) deflate.$(OBJEXT) infback.$(OBJEXT) \
	inffast.$(OBJEXT) inflate.$(OBJEXT) inftrees.$(OBJEXT) \
	trees.$(OBJEXT) uncompr.$(OBJEXT) zutil.$(OBJEXT) \
	$(am__objects_1) $(am__objects_2)
libz_a_OBJECTS = $(nodist_libz_a_OBJECTS)
nodist_example_OBJECTS = example.$(OBJEXT)
example_OBJECTS = $(nodist_example_OBJECTS)
example_LDADD = $(LDADD)
example_DEPENDENCIES = libz.a
nodist_minigzip_OBJECTS = minigzip.$(OBJEXT)
minigzip_OBJECTS = $(nodist_minigzip_OBJECTS)
minigzip_LDADD = $(LDADD)
minigzip_DEPENDENCIES = libz.a
am__dist_check_SCRIPTS_DIST = zlib.test
DEFAULT_INCLUDES = -I. -I$(srcdir)
depcomp = $(SHELL) $(top_srcdir)/../../build-aux/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
SOURCES = $(nodist_libz_a_SOURCES) $(nodist_example_SOURCES) \
	$(nodist_minigzip_SOURCES)
DIST_SOURCES =
RECURSIVE_TARGETS = all-recursive check-recursive dvi-recursive \
	html-recursive info-recursive install-data-recursive \
	install-dvi-recursive install-exec-recursive \
	install-html-recursive install-info-recursive \
	install-pdf-recursive install-ps-recursive install-recursive \
	installcheck-recursive installdirs-recursive pdf-recursive \
	ps-recursive uninstall-recursive
RECURSIVE_CLEAN_TARGETS = mostlyclean-recursive clean-recursive	\
  distclean-recursive maintainer-clean-recursive
AM_RECURSIVE_TARGETS = $(RECURSIVE_TARGETS:-recursive=) \
	$(RECURSIVE_CLEAN_TARGETS:-recursive=) tags TAGS ctags CTAGS \
	distdir dist dist-all distcheck
ETAGS = etags
CTAGS = ctags
am__tty_colors = \
red=; grn=; lgn=; blu=; std=
DIST_SUBDIRS = $(SUBDIRS)
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
distdir = $(PACKAGE)-$(VERSION)
top_distdir = $(distdir)
am__remove_distdir = \
  { test ! -d "$(distdir)" \
    || { find "$(distdir)" -type d ! -perm -200 -exec chmod u+w {} ';' \
         && rm -fr "$(distdir)"; }; }
am__relativize = \
  dir0=`pwd`; \
  sed_first='s,^\([^/]*\)/.*$$,\1,'; \
  sed_rest='s,^[^/]*/*,,'; \
  sed_last='s,^.*/\([^/]*\)$$,\1,'; \
  sed_butlast='s,/*[^/]*$$,,'; \
  while test -n "$$dir1"; do \
    first=`echo "$$dir1" | sed -e "$$sed_first"`; \
    if test "$$first" != "."; then \
      if test "$$first" = ".."; then \
        dir2=`echo "$$dir0" | sed -e "$$sed_last"`/"$$dir2"; \
        dir0=`echo "$$dir0" | sed -e "$$sed_butlast"`; \
      else \
        first2=`echo "$$dir2" | sed -e "$$sed_first"`; \
        if test "$$first2" = "$$first"; then \
          dir2=`echo "$$dir2" | sed -e "$$sed_rest"`; \
        else \
          dir2="../$$dir2"; \
        fi; \
        dir0="$$dir0"/"$$first"; \
      fi; \
    fi; \
    dir1=`echo "$$dir1" | sed -e "$$sed_rest"`; \
  done; \
  reldir="$$dir2"
DIST_ARCHIVES = $(distdir).tar.gz
GZIP_ENV = --best
distuninstallcheck_listfiles = find . -type f -print
distcleancheck_listfiles = find . -type f -print
ACLOCAL = ${SHELL} /home/dmonad/git/_test2/src/binary/pdftex-1.40.11/src/build-aux/missing --run aclocal-1.11
AMTAR = ${SHELL} /home/dmonad/git/_test2/src/binary/pdftex-1.40.11/src/build-aux/missing --run tar
AUTOCONF = ${SHELL} /home/dmonad/git/_test2/src/binary/pdftex-1.40.11/src/build-aux/missing --run autoconf
AUTOHEADER = ${SHELL} /home/dmonad/git/_test2/src/binary/pdftex-1.40.11/src/build-aux/missing --run autoheader
AUTOMAKE = ${SHELL} /home/dmonad/git/_test2/src/binary/pdftex-1.40.11/src/build-aux/missing --run automake-1.11
AWK = gawk
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -g -O2
CPP = gcc -E
CPPFLAGS = 
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /bin/grep -E
EXEEXT = 
GREP = /bin/grep
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
LDFLAGS = 
LIBOBJS = 
LIBS = 
LN_S = ln -s
LTLIBOBJS = 
MAINT = #
MAKEINFO = ${SHELL} /home/dmonad/git/_test2/src/binary/pdftex-1.40.11/src/build-aux/missing --run makeinfo
MKDIR_P = /bin/mkdir -p
OBJEXT = o
OTHER_TREE = zlib-1.2.4
PACKAGE = zlib-for-tex-live
PACKAGE_BUGREPORT = tex-k@tug.org
PACKAGE_NAME = zlib for TeX Live
PACKAGE_STRING = zlib for TeX Live 1.2.3
PACKAGE_TARNAME = zlib-for-tex-live
PACKAGE_URL = 
PACKAGE_VERSION = 1.2.3
PATH_SEPARATOR = :
RANLIB = ranlib
SET_MAKE = 
SHELL = /bin/bash
STRIP = 
VERSION = 1.2.3
ZLIB_DEFINES =  -DUSE_MMAP
ZLIB_TREE = zlib-1.2.3
abs_builddir = /home/dmonad/git/_test2/src/binary/pdftex-1.40.11/build-pdftex/libs/zlib
abs_srcdir = /home/dmonad/git/_test2/src/binary/pdftex-1.40.11/src/libs/zlib
abs_top_builddir = /home/dmonad/git/_test2/src/binary/pdftex-1.40.11/build-pdftex/libs/zlib
abs_top_srcdir = /home/dmonad/git/_test2/src/binary/pdftex-1.40.11/src/libs/zlib
ac_ct_CC = gcc
am__include = include
am__leading_dot = .
am__quote = 
am__tar = ${AMTAR} chof - "$$tardir"
am__untar = ${AMTAR} xf -
bindir = ${exec_prefix}/bin/x86_64-unknown-linux-gnu
build_alias = 
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host_alias = 
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${prefix}/texmf/doc/info
install_sh = ${SHELL} /home/dmonad/git/_test2/src/binary/pdftex-1.40.11/src/build-aux/install-sh
libdir = ${exec_prefix}/lib/x86_64-unknown-linux-gnu
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${prefix}/texmf/doc/man
mkdir_p = /bin/mkdir -p
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /usr/local
program_transform_name = s,x,x,
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = /home/dmonad/git/_test2/src/binary/pdftex-1.40.11/src/libs/zlib
sysconfdir = ${prefix}/etc
target_alias = 
top_build_prefix = 
top_builddir = .
top_srcdir = /home/dmonad/git/_test2/src/binary/pdftex-1.40.11/src/libs/zlib
ACLOCAL_AMFLAGS = -I ../../m4
EXTRA_DIST = $(ZLIB_TREE) $(ZLIB_TREE)-PATCHES $(OTHER_TREE) \
	$(OTHER_TREE)-PATCHES
SUBDIRS = . include
INCLUDES = -I$(top_srcdir)/$(ZLIB_TREE)
AM_CPPFLAGS = $(ZLIB_DEFINES)
noinst_LIBRARIES = libz.a
nodist_libz_a_SOURCES = $(ZLIB_TREE)/adler32.c $(ZLIB_TREE)/compress.c \
	$(ZLIB_TREE)/crc32.c $(ZLIB_TREE)/crc32.h \
	$(ZLIB_TREE)/deflate.c $(ZLIB_TREE)/deflate.h \
	$(ZLIB_TREE)/infback.c $(ZLIB_TREE)/inffast.c \
	$(ZLIB_TREE)/inffast.h $(ZLIB_TREE)/inffixed.h \
	$(ZLIB_TREE)/inflate.c $(ZLIB_TREE)/inflate.h \
	$(ZLIB_TREE)/inftrees.c $(ZLIB_TREE)/inftrees.h \
	$(ZLIB_TREE)/trees.c $(ZLIB_TREE)/trees.h \
	$(ZLIB_TREE)/uncompr.c $(ZLIB_TREE)/zutil.h \
	$(ZLIB_TREE)/zutil.c $(am__append_1) $(am__append_2)
#ZCONF_SRC = zconf.h.in
ZCONF_SRC = zconf.in.h
#dist_check_SCRIPTS = zlib.test
#TESTS = zlib.test
LDADD = libz.a
nodist_example_SOURCES = $(ZLIB_TREE)/example.c
nodist_minigzip_SOURCES = $(ZLIB_TREE)/minigzip.c
DISTCLEANFILES = zconf.h
CLEANFILES = foo.gz foo_gz
all: config.h
	$(MAKE) $(AM_MAKEFLAGS) all-recursive

.SUFFIXES:
.SUFFIXES: .c .o .obj
am--refresh:
	@:
$(srcdir)/Makefile.in: # $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      echo ' cd $(srcdir) && $(AUTOMAKE) --foreign'; \
	      $(am__cd) $(srcdir) && $(AUTOMAKE) --foreign \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    echo ' $(SHELL) ./config.status'; \
	    $(SHELL) ./config.status;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	$(SHELL) ./config.status --recheck

$(top_srcdir)/configure: # $(am__configure_deps)
	$(am__cd) $(srcdir) && $(AUTOCONF)
$(ACLOCAL_M4): # $(am__aclocal_m4_deps)
	$(am__cd) $(srcdir) && $(ACLOCAL) $(ACLOCAL_AMFLAGS)
$(am__aclocal_m4_deps):

config.h: stamp-h1
	@if test ! -f $@; then \
	  rm -f stamp-h1; \
	  $(MAKE) $(AM_MAKEFLAGS) stamp-h1; \
	else :; fi

stamp-h1: $(srcdir)/config.h.in $(top_builddir)/config.status
	@rm -f stamp-h1
	cd $(top_builddir) && $(SHELL) ./config.status config.h
$(srcdir)/config.h.in: # $(am__configure_deps) 
	($(am__cd) $(top_srcdir) && $(AUTOHEADER))
	rm -f stamp-h1
	touch $@

distclean-hdr:
	-rm -f config.h stamp-h1

clean-noinstLIBRARIES:
	-test -z "$(noinst_LIBRARIES)" || rm -f $(noinst_LIBRARIES)
libz.a: $(libz_a_OBJECTS) $(libz_a_DEPENDENCIES) 
	-rm -f libz.a
	$(libz_a_AR) libz.a $(libz_a_OBJECTS) $(libz_a_LIBADD)
	$(RANLIB) libz.a

clean-checkPROGRAMS:
	-test -z "$(check_PROGRAMS)" || rm -f $(check_PROGRAMS)
example$(EXEEXT): $(example_OBJECTS) $(example_DEPENDENCIES) 
	@rm -f example$(EXEEXT)
	$(LINK) $(example_OBJECTS) $(example_LDADD) $(LIBS)
minigzip$(EXEEXT): $(minigzip_OBJECTS) $(minigzip_DEPENDENCIES) 
	@rm -f minigzip$(EXEEXT)
	$(LINK) $(minigzip_OBJECTS) $(minigzip_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/adler32.Po
include ./$(DEPDIR)/compress.Po
include ./$(DEPDIR)/crc32.Po
include ./$(DEPDIR)/deflate.Po
include ./$(DEPDIR)/example.Po
include ./$(DEPDIR)/gzclose.Po
include ./$(DEPDIR)/gzio.Po
include ./$(DEPDIR)/gzlib.Po
include ./$(DEPDIR)/gzread.Po
include ./$(DEPDIR)/gzwrite.Po
include ./$(DEPDIR)/infback.Po
include ./$(DEPDIR)/inffast.Po
include ./$(DEPDIR)/inflate.Po
include ./$(DEPDIR)/inftrees.Po
include ./$(DEPDIR)/minigzip.Po
include ./$(DEPDIR)/trees.Po
include ./$(DEPDIR)/uncompr.Po
include ./$(DEPDIR)/zutil.Po

.c.o:
	$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c $<

.c.obj:
	$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c `$(CYGPATH_W) '$<'`

adler32.o: $(ZLIB_TREE)/adler32.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT adler32.o -MD -MP -MF $(DEPDIR)/adler32.Tpo -c -o adler32.o `test -f '$(ZLIB_TREE)/adler32.c' || echo '$(srcdir)/'`$(ZLIB_TREE)/adler32.c
	$(am__mv) $(DEPDIR)/adler32.Tpo $(DEPDIR)/adler32.Po
#	source='$(ZLIB_TREE)/adler32.c' object='adler32.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o adler32.o `test -f '$(ZLIB_TREE)/adler32.c' || echo '$(srcdir)/'`$(ZLIB_TREE)/adler32.c

adler32.obj: $(ZLIB_TREE)/adler32.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT adler32.obj -MD -MP -MF $(DEPDIR)/adler32.Tpo -c -o adler32.obj `if test -f '$(ZLIB_TREE)/adler32.c'; then $(CYGPATH_W) '$(ZLIB_TREE)/adler32.c'; else $(CYGPATH_W) '$(srcdir)/$(ZLIB_TREE)/adler32.c'; fi`
	$(am__mv) $(DEPDIR)/adler32.Tpo $(DEPDIR)/adler32.Po
#	source='$(ZLIB_TREE)/adler32.c' object='adler32.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o adler32.obj `if test -f '$(ZLIB_TREE)/adler32.c'; then $(CYGPATH_W) '$(ZLIB_TREE)/adler32.c'; else $(CYGPATH_W) '$(srcdir)/$(ZLIB_TREE)/adler32.c'; fi`

compress.o: $(ZLIB_TREE)/compress.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT compress.o -MD -MP -MF $(DEPDIR)/compress.Tpo -c -o compress.o `test -f '$(ZLIB_TREE)/compress.c' || echo '$(srcdir)/'`$(ZLIB_TREE)/compress.c
	$(am__mv) $(DEPDIR)/compress.Tpo $(DEPDIR)/compress.Po
#	source='$(ZLIB_TREE)/compress.c' object='compress.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o compress.o `test -f '$(ZLIB_TREE)/compress.c' || echo '$(srcdir)/'`$(ZLIB_TREE)/compress.c

compress.obj: $(ZLIB_TREE)/compress.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT compress.obj -MD -MP -MF $(DEPDIR)/compress.Tpo -c -o compress.obj `if test -f '$(ZLIB_TREE)/compress.c'; then $(CYGPATH_W) '$(ZLIB_TREE)/compress.c'; else $(CYGPATH_W) '$(srcdir)/$(ZLIB_TREE)/compress.c'; fi`
	$(am__mv) $(DEPDIR)/compress.Tpo $(DEPDIR)/compress.Po
#	source='$(ZLIB_TREE)/compress.c' object='compress.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o compress.obj `if test -f '$(ZLIB_TREE)/compress.c'; then $(CYGPATH_W) '$(ZLIB_TREE)/compress.c'; else $(CYGPATH_W) '$(srcdir)/$(ZLIB_TREE)/compress.c'; fi`

crc32.o: $(ZLIB_TREE)/crc32.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crc32.o -MD -MP -MF $(DEPDIR)/crc32.Tpo -c -o crc32.o `test -f '$(ZLIB_TREE)/crc32.c' || echo '$(srcdir)/'`$(ZLIB_TREE)/crc32.c
	$(am__mv) $(DEPDIR)/crc32.Tpo $(DEPDIR)/crc32.Po
#	source='$(ZLIB_TREE)/crc32.c' object='crc32.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crc32.o `test -f '$(ZLIB_TREE)/crc32.c' || echo '$(srcdir)/'`$(ZLIB_TREE)/crc32.c

crc32.obj: $(ZLIB_TREE)/crc32.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crc32.obj -MD -MP -MF $(DEPDIR)/crc32.Tpo -c -o crc32.obj `if test -f '$(ZLIB_TREE)/crc32.c'; then $(CYGPATH_W) '$(ZLIB_TREE)/crc32.c'; else $(CYGPATH_W) '$(srcdir)/$(ZLIB_TREE)/crc32.c'; fi`
	$(am__mv) $(DEPDIR)/crc32.Tpo $(DEPDIR)/crc32.Po
#	source='$(ZLIB_TREE)/crc32.c' object='crc32.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crc32.obj `if test -f '$(ZLIB_TREE)/crc32.c'; then $(CYGPATH_W) '$(ZLIB_TREE)/crc32.c'; else $(CYGPATH_W) '$(srcdir)/$(ZLIB_TREE)/crc32.c'; fi`

deflate.o: $(ZLIB_TREE)/deflate.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT deflate.o -MD -MP -MF $(DEPDIR)/deflate.Tpo -c -o deflate.o `test -f '$(ZLIB_TREE)/deflate.c' || echo '$(srcdir)/'`$(ZLIB_TREE)/deflate.c
	$(am__mv) $(DEPDIR)/deflate.Tpo $(DEPDIR)/deflate.Po
#	source='$(ZLIB_TREE)/deflate.c' object='deflate.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o deflate.o `test -f '$(ZLIB_TREE)/deflate.c' || echo '$(srcdir)/'`$(ZLIB_TREE)/deflate.c

deflate.obj: $(ZLIB_TREE)/deflate.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT deflate.obj -MD -MP -MF $(DEPDIR)/deflate.Tpo -c -o deflate.obj `if test -f '$(ZLIB_TREE)/deflate.c'; then $(CYGPATH_W) '$(ZLIB_TREE)/deflate.c'; else $(CYGPATH_W) '$(srcdir)/$(ZLIB_TREE)/deflate.c'; fi`
	$(am__mv) $(DEPDIR)/deflate.Tpo $(DEPDIR)/deflate.Po
#	source='$(ZLIB_TREE)/deflate.c' object='deflate.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o deflate.obj `if test -f '$(ZLIB_TREE)/deflate.c'; then $(CYGPATH_W) '$(ZLIB_TREE)/deflate.c'; else $(CYGPATH_W) '$(srcdir)/$(ZLIB_TREE)/deflate.c'; fi`

infback.o: $(ZLIB_TREE)/infback.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT infback.o -MD -MP -MF $(DEPDIR)/infback.Tpo -c -o infback.o `test -f '$(ZLIB_TREE)/infback.c' || echo '$(srcdir)/'`$(ZLIB_TREE)/infback.c
	$(am__mv) $(DEPDIR)/infback.Tpo $(DEPDIR)/infback.Po
#	source='$(ZLIB_TREE)/infback.c' object='infback.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o infback.o `test -f '$(ZLIB_TREE)/infback.c' || echo '$(srcdir)/'`$(ZLIB_TREE)/infback.c

infback.obj: $(ZLIB_TREE)/infback.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT infback.obj -MD -MP -MF $(DEPDIR)/infback.Tpo -c -o infback.obj `if test -f '$(ZLIB_TREE)/infback.c'; then $(CYGPATH_W) '$(ZLIB_TREE)/infback.c'; else $(CYGPATH_W) '$(srcdir)/$(ZLIB_TREE)/infback.c'; fi`
	$(am__mv) $(DEPDIR)/infback.Tpo $(DEPDIR)/infback.Po
#	source='$(ZLIB_TREE)/infback.c' object='infback.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o infback.obj `if test -f '$(ZLIB_TREE)/infback.c'; then $(CYGPATH_W) '$(ZLIB_TREE)/infback.c'; else $(CYGPATH_W) '$(srcdir)/$(ZLIB_TREE)/infback.c'; fi`

inffast.o: $(ZLIB_TREE)/inffast.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT inffast.o -MD -MP -MF $(DEPDIR)/inffast.Tpo -c -o inffast.o `test -f '$(ZLIB_TREE)/inffast.c' || echo '$(srcdir)/'`$(ZLIB_TREE)/inffast.c
	$(am__mv) $(DEPDIR)/inffast.Tpo $(DEPDIR)/inffast.Po
#	source='$(ZLIB_TREE)/inffast.c' object='inffast.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o inffast.o `test -f '$(ZLIB_TREE)/inffast.c' || echo '$(srcdir)/'`$(ZLIB_TREE)/inffast.c

inffast.obj: $(ZLIB_TREE)/inffast.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT inffast.obj -MD -MP -MF $(DEPDIR)/inffast.Tpo -c -o inffast.obj `if test -f '$(ZLIB_TREE)/inffast.c'; then $(CYGPATH_W) '$(ZLIB_TREE)/inffast.c'; else $(CYGPATH_W) '$(srcdir)/$(ZLIB_TREE)/inffast.c'; fi`
	$(am__mv) $(DEPDIR)/inffast.Tpo $(DEPDIR)/inffast.Po
#	source='$(ZLIB_TREE)/inffast.c' object='inffast.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o inffast.obj `if test -f '$(ZLIB_TREE)/inffast.c'; then $(CYGPATH_W) '$(ZLIB_TREE)/inffast.c'; else $(CYGPATH_W) '$(srcdir)/$(ZLIB_TREE)/inffast.c'; fi`

inflate.o: $(ZLIB_TREE)/inflate.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT inflate.o -MD -MP -MF $(DEPDIR)/inflate.Tpo -c -o inflate.o `test -f '$(ZLIB_TREE)/inflate.c' || echo '$(srcdir)/'`$(ZLIB_TREE)/inflate.c
	$(am__mv) $(DEPDIR)/inflate.Tpo $(DEPDIR)/inflate.Po
#	source='$(ZLIB_TREE)/inflate.c' object='inflate.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o inflate.o `test -f '$(ZLIB_TREE)/inflate.c' || echo '$(srcdir)/'`$(ZLIB_TREE)/inflate.c

inflate.obj: $(ZLIB_TREE)/inflate.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT inflate.obj -MD -MP -MF $(DEPDIR)/inflate.Tpo -c -o inflate.obj `if test -f '$(ZLIB_TREE)/inflate.c'; then $(CYGPATH_W) '$(ZLIB_TREE)/inflate.c'; else $(CYGPATH_W) '$(srcdir)/$(ZLIB_TREE)/inflate.c'; fi`
	$(am__mv) $(DEPDIR)/inflate.Tpo $(DEPDIR)/inflate.Po
#	source='$(ZLIB_TREE)/inflate.c' object='inflate.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o inflate.obj `if test -f '$(ZLIB_TREE)/inflate.c'; then $(CYGPATH_W) '$(ZLIB_TREE)/inflate.c'; else $(CYGPATH_W) '$(srcdir)/$(ZLIB_TREE)/inflate.c'; fi`

inftrees.o: $(ZLIB_TREE)/inftrees.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT inftrees.o -MD -MP -MF $(DEPDIR)/inftrees.Tpo -c -o inftrees.o `test -f '$(ZLIB_TREE)/inftrees.c' || echo '$(srcdir)/'`$(ZLIB_TREE)/inftrees.c
	$(am__mv) $(DEPDIR)/inftrees.Tpo $(DEPDIR)/inftrees.Po
#	source='$(ZLIB_TREE)/inftrees.c' object='inftrees.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o inftrees.o `test -f '$(ZLIB_TREE)/inftrees.c' || echo '$(srcdir)/'`$(ZLIB_TREE)/inftrees.c

inftrees.obj: $(ZLIB_TREE)/inftrees.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT inftrees.obj -MD -MP -MF $(DEPDIR)/inftrees.Tpo -c -o inftrees.obj `if test -f '$(ZLIB_TREE)/inftrees.c'; then $(CYGPATH_W) '$(ZLIB_TREE)/inftrees.c'; else $(CYGPATH_W) '$(srcdir)/$(ZLIB_TREE)/inftrees.c'; fi`
	$(am__mv) $(DEPDIR)/inftrees.Tpo $(DEPDIR)/inftrees.Po
#	source='$(ZLIB_TREE)/inftrees.c' object='inftrees.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o inftrees.obj `if test -f '$(ZLIB_TREE)/inftrees.c'; then $(CYGPATH_W) '$(ZLIB_TREE)/inftrees.c'; else $(CYGPATH_W) '$(srcdir)/$(ZLIB_TREE)/inftrees.c'; fi`

trees.o: $(ZLIB_TREE)/trees.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT trees.o -MD -MP -MF $(DEPDIR)/trees.Tpo -c -o trees.o `test -f '$(ZLIB_TREE)/trees.c' || echo '$(srcdir)/'`$(ZLIB_TREE)/trees.c
	$(am__mv) $(DEPDIR)/trees.Tpo $(DEPDIR)/trees.Po
#	source='$(ZLIB_TREE)/trees.c' object='trees.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o trees.o `test -f '$(ZLIB_TREE)/trees.c' || echo '$(srcdir)/'`$(ZLIB_TREE)/trees.c

trees.obj: $(ZLIB_TREE)/trees.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT trees.obj -MD -MP -MF $(DEPDIR)/trees.Tpo -c -o trees.obj `if test -f '$(ZLIB_TREE)/trees.c'; then $(CYGPATH_W) '$(ZLIB_TREE)/trees.c'; else $(CYGPATH_W) '$(srcdir)/$(ZLIB_TREE)/trees.c'; fi`
	$(am__mv) $(DEPDIR)/trees.Tpo $(DEPDIR)/trees.Po
#	source='$(ZLIB_TREE)/trees.c' object='trees.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o trees.obj `if test -f '$(ZLIB_TREE)/trees.c'; then $(CYGPATH_W) '$(ZLIB_TREE)/trees.c'; else $(CYGPATH_W) '$(srcdir)/$(ZLIB_TREE)/trees.c'; fi`

uncompr.o: $(ZLIB_TREE)/uncompr.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT uncompr.o -MD -MP -MF $(DEPDIR)/uncompr.Tpo -c -o uncompr.o `test -f '$(ZLIB_TREE)/uncompr.c' || echo '$(srcdir)/'`$(ZLIB_TREE)/uncompr.c
	$(am__mv) $(DEPDIR)/uncompr.Tpo $(DEPDIR)/uncompr.Po
#	source='$(ZLIB_TREE)/uncompr.c' object='uncompr.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o uncompr.o `test -f '$(ZLIB_TREE)/uncompr.c' || echo '$(srcdir)/'`$(ZLIB_TREE)/uncompr.c

uncompr.obj: $(ZLIB_TREE)/uncompr.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT uncompr.obj -MD -MP -MF $(DEPDIR)/uncompr.Tpo -c -o uncompr.obj `if test -f '$(ZLIB_TREE)/uncompr.c'; then $(CYGPATH_W) '$(ZLIB_TREE)/uncompr.c'; else $(CYGPATH_W) '$(srcdir)/$(ZLIB_TREE)/uncompr.c'; fi`
	$(am__mv) $(DEPDIR)/uncompr.Tpo $(DEPDIR)/uncompr.Po
#	source='$(ZLIB_TREE)/uncompr.c' object='uncompr.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o uncompr.obj `if test -f '$(ZLIB_TREE)/uncompr.c'; then $(CYGPATH_W) '$(ZLIB_TREE)/uncompr.c'; else $(CYGPATH_W) '$(srcdir)/$(ZLIB_TREE)/uncompr.c'; fi`

zutil.o: $(ZLIB_TREE)/zutil.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT zutil.o -MD -MP -MF $(DEPDIR)/zutil.Tpo -c -o zutil.o `test -f '$(ZLIB_TREE)/zutil.c' || echo '$(srcdir)/'`$(ZLIB_TREE)/zutil.c
	$(am__mv) $(DEPDIR)/zutil.Tpo $(DEPDIR)/zutil.Po
#	source='$(ZLIB_TREE)/zutil.c' object='zutil.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o zutil.o `test -f '$(ZLIB_TREE)/zutil.c' || echo '$(srcdir)/'`$(ZLIB_TREE)/zutil.c

zutil.obj: $(ZLIB_TREE)/zutil.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT zutil.obj -MD -MP -MF $(DEPDIR)/zutil.Tpo -c -o zutil.obj `if test -f '$(ZLIB_TREE)/zutil.c'; then $(CYGPATH_W) '$(ZLIB_TREE)/zutil.c'; else $(CYGPATH_W) '$(srcdir)/$(ZLIB_TREE)/zutil.c'; fi`
	$(am__mv) $(DEPDIR)/zutil.Tpo $(DEPDIR)/zutil.Po
#	source='$(ZLIB_TREE)/zutil.c' object='zutil.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o zutil.obj `if test -f '$(ZLIB_TREE)/zutil.c'; then $(CYGPATH_W) '$(ZLIB_TREE)/zutil.c'; else $(CYGPATH_W) '$(srcdir)/$(ZLIB_TREE)/zutil.c'; fi`

gzio.o: $(ZLIB_TREE)/gzio.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT gzio.o -MD -MP -MF $(DEPDIR)/gzio.Tpo -c -o gzio.o `test -f '$(ZLIB_TREE)/gzio.c' || echo '$(srcdir)/'`$(ZLIB_TREE)/gzio.c
	$(am__mv) $(DEPDIR)/gzio.Tpo $(DEPDIR)/gzio.Po
#	source='$(ZLIB_TREE)/gzio.c' object='gzio.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o gzio.o `test -f '$(ZLIB_TREE)/gzio.c' || echo '$(srcdir)/'`$(ZLIB_TREE)/gzio.c

gzio.obj: $(ZLIB_TREE)/gzio.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT gzio.obj -MD -MP -MF $(DEPDIR)/gzio.Tpo -c -o gzio.obj `if test -f '$(ZLIB_TREE)/gzio.c'; then $(CYGPATH_W) '$(ZLIB_TREE)/gzio.c'; else $(CYGPATH_W) '$(srcdir)/$(ZLIB_TREE)/gzio.c'; fi`
	$(am__mv) $(DEPDIR)/gzio.Tpo $(DEPDIR)/gzio.Po
#	source='$(ZLIB_TREE)/gzio.c' object='gzio.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o gzio.obj `if test -f '$(ZLIB_TREE)/gzio.c'; then $(CYGPATH_W) '$(ZLIB_TREE)/gzio.c'; else $(CYGPATH_W) '$(srcdir)/$(ZLIB_TREE)/gzio.c'; fi`

gzclose.o: $(ZLIB_TREE)/gzclose.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT gzclose.o -MD -MP -MF $(DEPDIR)/gzclose.Tpo -c -o gzclose.o `test -f '$(ZLIB_TREE)/gzclose.c' || echo '$(srcdir)/'`$(ZLIB_TREE)/gzclose.c
	$(am__mv) $(DEPDIR)/gzclose.Tpo $(DEPDIR)/gzclose.Po
#	source='$(ZLIB_TREE)/gzclose.c' object='gzclose.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o gzclose.o `test -f '$(ZLIB_TREE)/gzclose.c' || echo '$(srcdir)/'`$(ZLIB_TREE)/gzclose.c

gzclose.obj: $(ZLIB_TREE)/gzclose.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT gzclose.obj -MD -MP -MF $(DEPDIR)/gzclose.Tpo -c -o gzclose.obj `if test -f '$(ZLIB_TREE)/gzclose.c'; then $(CYGPATH_W) '$(ZLIB_TREE)/gzclose.c'; else $(CYGPATH_W) '$(srcdir)/$(ZLIB_TREE)/gzclose.c'; fi`
	$(am__mv) $(DEPDIR)/gzclose.Tpo $(DEPDIR)/gzclose.Po
#	source='$(ZLIB_TREE)/gzclose.c' object='gzclose.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o gzclose.obj `if test -f '$(ZLIB_TREE)/gzclose.c'; then $(CYGPATH_W) '$(ZLIB_TREE)/gzclose.c'; else $(CYGPATH_W) '$(srcdir)/$(ZLIB_TREE)/gzclose.c'; fi`

gzlib.o: $(ZLIB_TREE)/gzlib.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT gzlib.o -MD -MP -MF $(DEPDIR)/gzlib.Tpo -c -o gzlib.o `test -f '$(ZLIB_TREE)/gzlib.c' || echo '$(srcdir)/'`$(ZLIB_TREE)/gzlib.c
	$(am__mv) $(DEPDIR)/gzlib.Tpo $(DEPDIR)/gzlib.Po
#	source='$(ZLIB_TREE)/gzlib.c' object='gzlib.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o gzlib.o `test -f '$(ZLIB_TREE)/gzlib.c' || echo '$(srcdir)/'`$(ZLIB_TREE)/gzlib.c

gzlib.obj: $(ZLIB_TREE)/gzlib.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT gzlib.obj -MD -MP -MF $(DEPDIR)/gzlib.Tpo -c -o gzlib.obj `if test -f '$(ZLIB_TREE)/gzlib.c'; then $(CYGPATH_W) '$(ZLIB_TREE)/gzlib.c'; else $(CYGPATH_W) '$(srcdir)/$(ZLIB_TREE)/gzlib.c'; fi`
	$(am__mv) $(DEPDIR)/gzlib.Tpo $(DEPDIR)/gzlib.Po
#	source='$(ZLIB_TREE)/gzlib.c' object='gzlib.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o gzlib.obj `if test -f '$(ZLIB_TREE)/gzlib.c'; then $(CYGPATH_W) '$(ZLIB_TREE)/gzlib.c'; else $(CYGPATH_W) '$(srcdir)/$(ZLIB_TREE)/gzlib.c'; fi`

gzread.o: $(ZLIB_TREE)/gzread.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT gzread.o -MD -MP -MF $(DEPDIR)/gzread.Tpo -c -o gzread.o `test -f '$(ZLIB_TREE)/gzread.c' || echo '$(srcdir)/'`$(ZLIB_TREE)/gzread.c
	$(am__mv) $(DEPDIR)/gzread.Tpo $(DEPDIR)/gzread.Po
#	source='$(ZLIB_TREE)/gzread.c' object='gzread.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o gzread.o `test -f '$(ZLIB_TREE)/gzread.c' || echo '$(srcdir)/'`$(ZLIB_TREE)/gzread.c

gzread.obj: $(ZLIB_TREE)/gzread.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT gzread.obj -MD -MP -MF $(DEPDIR)/gzread.Tpo -c -o gzread.obj `if test -f '$(ZLIB_TREE)/gzread.c'; then $(CYGPATH_W) '$(ZLIB_TREE)/gzread.c'; else $(CYGPATH_W) '$(srcdir)/$(ZLIB_TREE)/gzread.c'; fi`
	$(am__mv) $(DEPDIR)/gzread.Tpo $(DEPDIR)/gzread.Po
#	source='$(ZLIB_TREE)/gzread.c' object='gzread.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o gzread.obj `if test -f '$(ZLIB_TREE)/gzread.c'; then $(CYGPATH_W) '$(ZLIB_TREE)/gzread.c'; else $(CYGPATH_W) '$(srcdir)/$(ZLIB_TREE)/gzread.c'; fi`

gzwrite.o: $(ZLIB_TREE)/gzwrite.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT gzwrite.o -MD -MP -MF $(DEPDIR)/gzwrite.Tpo -c -o gzwrite.o `test -f '$(ZLIB_TREE)/gzwrite.c' || echo '$(srcdir)/'`$(ZLIB_TREE)/gzwrite.c
	$(am__mv) $(DEPDIR)/gzwrite.Tpo $(DEPDIR)/gzwrite.Po
#	source='$(ZLIB_TREE)/gzwrite.c' object='gzwrite.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o gzwrite.o `test -f '$(ZLIB_TREE)/gzwrite.c' || echo '$(srcdir)/'`$(ZLIB_TREE)/gzwrite.c

gzwrite.obj: $(ZLIB_TREE)/gzwrite.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT gzwrite.obj -MD -MP -MF $(DEPDIR)/gzwrite.Tpo -c -o gzwrite.obj `if test -f '$(ZLIB_TREE)/gzwrite.c'; then $(CYGPATH_W) '$(ZLIB_TREE)/gzwrite.c'; else $(CYGPATH_W) '$(srcdir)/$(ZLIB_TREE)/gzwrite.c'; fi`
	$(am__mv) $(DEPDIR)/gzwrite.Tpo $(DEPDIR)/gzwrite.Po
#	source='$(ZLIB_TREE)/gzwrite.c' object='gzwrite.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o gzwrite.obj `if test -f '$(ZLIB_TREE)/gzwrite.c'; then $(CYGPATH_W) '$(ZLIB_TREE)/gzwrite.c'; else $(CYGPATH_W) '$(srcdir)/$(ZLIB_TREE)/gzwrite.c'; fi`

example.o: $(ZLIB_TREE)/example.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT example.o -MD -MP -MF $(DEPDIR)/example.Tpo -c -o example.o `test -f '$(ZLIB_TREE)/example.c' || echo '$(srcdir)/'`$(ZLIB_TREE)/example.c
	$(am__mv) $(DEPDIR)/example.Tpo $(DEPDIR)/example.Po
#	source='$(ZLIB_TREE)/example.c' object='example.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o example.o `test -f '$(ZLIB_TREE)/example.c' || echo '$(srcdir)/'`$(ZLIB_TREE)/example.c

example.obj: $(ZLIB_TREE)/example.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT example.obj -MD -MP -MF $(DEPDIR)/example.Tpo -c -o example.obj `if test -f '$(ZLIB_TREE)/example.c'; then $(CYGPATH_W) '$(ZLIB_TREE)/example.c'; else $(CYGPATH_W) '$(srcdir)/$(ZLIB_TREE)/example.c'; fi`
	$(am__mv) $(DEPDIR)/example.Tpo $(DEPDIR)/example.Po
#	source='$(ZLIB_TREE)/example.c' object='example.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o example.obj `if test -f '$(ZLIB_TREE)/example.c'; then $(CYGPATH_W) '$(ZLIB_TREE)/example.c'; else $(CYGPATH_W) '$(srcdir)/$(ZLIB_TREE)/example.c'; fi`

minigzip.o: $(ZLIB_TREE)/minigzip.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT minigzip.o -MD -MP -MF $(DEPDIR)/minigzip.Tpo -c -o minigzip.o `test -f '$(ZLIB_TREE)/minigzip.c' || echo '$(srcdir)/'`$(ZLIB_TREE)/minigzip.c
	$(am__mv) $(DEPDIR)/minigzip.Tpo $(DEPDIR)/minigzip.Po
#	source='$(ZLIB_TREE)/minigzip.c' object='minigzip.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o minigzip.o `test -f '$(ZLIB_TREE)/minigzip.c' || echo '$(srcdir)/'`$(ZLIB_TREE)/minigzip.c

minigzip.obj: $(ZLIB_TREE)/minigzip.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT minigzip.obj -MD -MP -MF $(DEPDIR)/minigzip.Tpo -c -o minigzip.obj `if test -f '$(ZLIB_TREE)/minigzip.c'; then $(CYGPATH_W) '$(ZLIB_TREE)/minigzip.c'; else $(CYGPATH_W) '$(srcdir)/$(ZLIB_TREE)/minigzip.c'; fi`
	$(am__mv) $(DEPDIR)/minigzip.Tpo $(DEPDIR)/minigzip.Po
#	source='$(ZLIB_TREE)/minigzip.c' object='minigzip.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o minigzip.obj `if test -f '$(ZLIB_TREE)/minigzip.c'; then $(CYGPATH_W) '$(ZLIB_TREE)/minigzip.c'; else $(CYGPATH_W) '$(srcdir)/$(ZLIB_TREE)/minigzip.c'; fi`

# This directory's subdirectories are mostly independent; you can cd
# into them and run `make' without going through this Makefile.
# To change the values of `make' variables: instead of editing Makefiles,
# (1) if the variable is set in `config.status', edit `config.status'
#     (which will cause the Makefiles to be regenerated when you run `make');
# (2) otherwise, pass the desired values on the `make' command line.
$(RECURSIVE_TARGETS):
	@fail= failcom='exit 1'; \
	for f in x $$MAKEFLAGS; do \
	  case $$f in \
	    *=* | --[!k]*);; \
	    *k*) failcom='fail=yes';; \
	  esac; \
	done; \
	dot_seen=no; \
	target=`echo $@ | sed s/-recursive//`; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    dot_seen=yes; \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  ($(am__cd) $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done; \
	if test "$$dot_seen" = "no"; then \
	  $(MAKE) $(AM_MAKEFLAGS) "$$target-am" || exit 1; \
	fi; test -z "$$fail"

$(RECURSIVE_CLEAN_TARGETS):
	@fail= failcom='exit 1'; \
	for f in x $$MAKEFLAGS; do \
	  case $$f in \
	    *=* | --[!k]*);; \
	    *k*) failcom='fail=yes';; \
	  esac; \
	done; \
	dot_seen=no; \
	case "$@" in \
	  distclean-* | maintainer-clean-*) list='$(DIST_SUBDIRS)' ;; \
	  *) list='$(SUBDIRS)' ;; \
	esac; \
	rev=''; for subdir in $$list; do \
	  if test "$$subdir" = "."; then :; else \
	    rev="$$subdir $$rev"; \
	  fi; \
	done; \
	rev="$$rev ."; \
	target=`echo $@ | sed s/-recursive//`; \
	for subdir in $$rev; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  ($(am__cd) $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done && test -z "$$fail"
tags-recursive:
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  test "$$subdir" = . || ($(am__cd) $$subdir && $(MAKE) $(AM_MAKEFLAGS) tags); \
	done
ctags-recursive:
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  test "$$subdir" = . || ($(am__cd) $$subdir && $(MAKE) $(AM_MAKEFLAGS) ctags); \
	done

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS: tags-recursive $(HEADERS) $(SOURCES) config.h.in $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	set x; \
	here=`pwd`; \
	if ($(ETAGS) --etags-include --version) >/dev/null 2>&1; then \
	  include_option=--etags-include; \
	  empty_fix=.; \
	else \
	  include_option=--include; \
	  empty_fix=; \
	fi; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test ! -f $$subdir/TAGS || \
	      set "$$@" "$$include_option=$$here/$$subdir/TAGS"; \
	  fi; \
	done; \
	list='$(SOURCES) $(HEADERS) config.h.in $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: CTAGS
CTAGS: ctags-recursive $(HEADERS) $(SOURCES) config.h.in $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	list='$(SOURCES) $(HEADERS) config.h.in $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

check-TESTS: $(TESTS)
	@failed=0; all=0; xfail=0; xpass=0; skip=0; \
	srcdir=$(srcdir); export srcdir; \
	list=' $(TESTS) '; \
	$(am__tty_colors); \
	if test -n "$$list"; then \
	  for tst in $$list; do \
	    if test -f ./$$tst; then dir=./; \
	    elif test -f $$tst; then dir=; \
	    else dir="$(srcdir)/"; fi; \
	    if $(TESTS_ENVIRONMENT) $${dir}$$tst; then \
	      all=`expr $$all + 1`; \
	      case " $(XFAIL_TESTS) " in \
	      *[\ \	]$$tst[\ \	]*) \
		xpass=`expr $$xpass + 1`; \
		failed=`expr $$failed + 1`; \
		col=$$red; res=XPASS; \
	      ;; \
	      *) \
		col=$$grn; res=PASS; \
	      ;; \
	      esac; \
	    elif test $$? -ne 77; then \
	      all=`expr $$all + 1`; \
	      case " $(XFAIL_TESTS) " in \
	      *[\ \	]$$tst[\ \	]*) \
		xfail=`expr $$xfail + 1`; \
		col=$$lgn; res=XFAIL; \
	      ;; \
	      *) \
		failed=`expr $$failed + 1`; \
		col=$$red; res=FAIL; \
	      ;; \
	      esac; \
	    else \
	      skip=`expr $$skip + 1`; \
	      col=$$blu; res=SKIP; \
	    fi; \
	    echo "$${col}$$res$${std}: $$tst"; \
	  done; \
	  if test "$$all" -eq 1; then \
	    tests="test"; \
	    All=""; \
	  else \
	    tests="tests"; \
	    All="All "; \
	  fi; \
	  if test "$$failed" -eq 0; then \
	    if test "$$xfail" -eq 0; then \
	      banner="$$All$$all $$tests passed"; \
	    else \
	      if test "$$xfail" -eq 1; then failures=failure; else failures=failures; fi; \
	      banner="$$All$$all $$tests behaved as expected ($$xfail expected $$failures)"; \
	    fi; \
	  else \
	    if test "$$xpass" -eq 0; then \
	      banner="$$failed of $$all $$tests failed"; \
	    else \
	      if test "$$xpass" -eq 1; then passes=pass; else passes=passes; fi; \
	      banner="$$failed of $$all $$tests did not behave as expected ($$xpass unexpected $$passes)"; \
	    fi; \
	  fi; \
	  dashes="$$banner"; \
	  skipped=""; \
	  if test "$$skip" -ne 0; then \
	    if test "$$skip" -eq 1; then \
	      skipped="($$skip test was not run)"; \
	    else \
	      skipped="($$skip tests were not run)"; \
	    fi; \
	    test `echo "$$skipped" | wc -c` -le `echo "$$banner" | wc -c` || \
	      dashes="$$skipped"; \
	  fi; \
	  report=""; \
	  if test "$$failed" -ne 0 && test -n "$(PACKAGE_BUGREPORT)"; then \
	    report="Please report to $(PACKAGE_BUGREPORT)"; \
	    test `echo "$$report" | wc -c` -le `echo "$$banner" | wc -c` || \
	      dashes="$$report"; \
	  fi; \
	  dashes=`echo "$$dashes" | sed s/./=/g`; \
	  if test "$$failed" -eq 0; then \
	    echo "$$grn$$dashes"; \
	  else \
	    echo "$$red$$dashes"; \
	  fi; \
	  echo "$$banner"; \
	  test -z "$$skipped" || echo "$$skipped"; \
	  test -z "$$report" || echo "$$report"; \
	  echo "$$dashes$$std"; \
	  test "$$failed" -eq 0; \
	else :; fi

distdir: $(DISTFILES)
	$(am__remove_distdir)
	test -d "$(distdir)" || mkdir "$(distdir)"
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
	@list='$(DIST_SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test -d "$(distdir)/$$subdir" \
	    || $(MKDIR_P) "$(distdir)/$$subdir" \
	    || exit 1; \
	  fi; \
	done
	@list='$(DIST_SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    dir1=$$subdir; dir2="$(distdir)/$$subdir"; \
	    $(am__relativize); \
	    new_distdir=$$reldir; \
	    dir1=$$subdir; dir2="$(top_distdir)"; \
	    $(am__relativize); \
	    new_top_distdir=$$reldir; \
	    echo " (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) top_distdir="$$new_top_distdir" distdir="$$new_distdir" \\"; \
	    echo "     am__remove_distdir=: am__skip_length_check=: am__skip_mode_fix=: distdir)"; \
	    ($(am__cd) $$subdir && \
	      $(MAKE) $(AM_MAKEFLAGS) \
	        top_distdir="$$new_top_distdir" \
	        distdir="$$new_distdir" \
		am__remove_distdir=: \
		am__skip_length_check=: \
		am__skip_mode_fix=: \
	        distdir) \
	      || exit 1; \
	  fi; \
	done
	$(MAKE) $(AM_MAKEFLAGS) \
	  top_distdir="$(top_distdir)" distdir="$(distdir)" \
	  dist-hook
	-test -n "$(am__skip_mode_fix)" \
	|| find "$(distdir)" -type d ! -perm -755 \
		-exec chmod u+rwx,go+rx {} \; -o \
	  ! -type d ! -perm -444 -links 1 -exec chmod a+r {} \; -o \
	  ! -type d ! -perm -400 -exec chmod a+r {} \; -o \
	  ! -type d ! -perm -444 -exec $(install_sh) -c -m a+r {} {} \; \
	|| chmod -R a+r "$(distdir)"
dist-gzip: distdir
	tardir=$(distdir) && $(am__tar) | GZIP=$(GZIP_ENV) gzip -c >$(distdir).tar.gz
	$(am__remove_distdir)

dist-bzip2: distdir
	tardir=$(distdir) && $(am__tar) | bzip2 -9 -c >$(distdir).tar.bz2
	$(am__remove_distdir)

dist-lzma: distdir
	tardir=$(distdir) && $(am__tar) | lzma -9 -c >$(distdir).tar.lzma
	$(am__remove_distdir)

dist-xz: distdir
	tardir=$(distdir) && $(am__tar) | xz -c >$(distdir).tar.xz
	$(am__remove_distdir)

dist-tarZ: distdir
	tardir=$(distdir) && $(am__tar) | compress -c >$(distdir).tar.Z
	$(am__remove_distdir)

dist-shar: distdir
	shar $(distdir) | GZIP=$(GZIP_ENV) gzip -c >$(distdir).shar.gz
	$(am__remove_distdir)

dist-zip: distdir
	-rm -f $(distdir).zip
	zip -rq $(distdir).zip $(distdir)
	$(am__remove_distdir)

dist dist-all: distdir
	tardir=$(distdir) && $(am__tar) | GZIP=$(GZIP_ENV) gzip -c >$(distdir).tar.gz
	$(am__remove_distdir)

# This target untars the dist file and tries a VPATH configuration.  Then
# it guarantees that the distribution is self-contained by making another
# tarfile.
distcheck: dist
	case '$(DIST_ARCHIVES)' in \
	*.tar.gz*) \
	  GZIP=$(GZIP_ENV) gzip -dc $(distdir).tar.gz | $(am__untar) ;;\
	*.tar.bz2*) \
	  bzip2 -dc $(distdir).tar.bz2 | $(am__untar) ;;\
	*.tar.lzma*) \
	  lzma -dc $(distdir).tar.lzma | $(am__untar) ;;\
	*.tar.xz*) \
	  xz -dc $(distdir).tar.xz | $(am__untar) ;;\
	*.tar.Z*) \
	  uncompress -c $(distdir).tar.Z | $(am__untar) ;;\
	*.shar.gz*) \
	  GZIP=$(GZIP_ENV) gzip -dc $(distdir).shar.gz | unshar ;;\
	*.zip*) \
	  unzip $(distdir).zip ;;\
	esac
	chmod -R a-w $(distdir); chmod a+w $(distdir)
	mkdir $(distdir)/_build
	mkdir $(distdir)/_inst
	chmod a-w $(distdir)
	test -d $(distdir)/_build || exit 0; \
	dc_install_base=`$(am__cd) $(distdir)/_inst && pwd | sed -e 's,^[^:\\/]:[\\/],/,'` \
	  && dc_destdir="$${TMPDIR-/tmp}/am-dc-$$$$/" \
	  && am__cwd=`pwd` \
	  && $(am__cd) $(distdir)/_build \
	  && ../configure --srcdir=.. --prefix="$$dc_install_base" \
	    $(DISTCHECK_CONFIGURE_FLAGS) \
	  && $(MAKE) $(AM_MAKEFLAGS) \
	  && $(MAKE) $(AM_MAKEFLAGS) dvi \
	  && $(MAKE) $(AM_MAKEFLAGS) check \
	  && $(MAKE) $(AM_MAKEFLAGS) install \
	  && $(MAKE) $(AM_MAKEFLAGS) installcheck \
	  && $(MAKE) $(AM_MAKEFLAGS) uninstall \
	  && $(MAKE) $(AM_MAKEFLAGS) distuninstallcheck_dir="$$dc_install_base" \
	        distuninstallcheck \
	  && chmod -R a-w "$$dc_install_base" \
	  && ({ \
	       (cd ../.. && umask 077 && mkdir "$$dc_destdir") \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" install \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" uninstall \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" \
	            distuninstallcheck_dir="$$dc_destdir" distuninstallcheck; \
	      } || { rm -rf "$$dc_destdir"; exit 1; }) \
	  && rm -rf "$$dc_destdir" \
	  && $(MAKE) $(AM_MAKEFLAGS) dist \
	  && rm -rf $(DIST_ARCHIVES) \
	  && $(MAKE) $(AM_MAKEFLAGS) distcleancheck \
	  && cd "$$am__cwd" \
	  || exit 1
	$(am__remove_distdir)
	@(echo "$(distdir) archives ready for distribution: "; \
	  list='$(DIST_ARCHIVES)'; for i in $$list; do echo $$i; done) | \
	  sed -e 1h -e 1s/./=/g -e 1p -e 1x -e '$$p' -e '$$x'
distuninstallcheck:
	@$(am__cd) '$(distuninstallcheck_dir)' \
	&& test `$(distuninstallcheck_listfiles) | wc -l` -le 1 \
	   || { echo "ERROR: files left after uninstall:" ; \
	        if test -n "$(DESTDIR)"; then \
	          echo "  (check DESTDIR support)"; \
	        fi ; \
	        $(distuninstallcheck_listfiles) ; \
	        exit 1; } >&2
distcleancheck: distclean
	@if test '$(srcdir)' = . ; then \
	  echo "ERROR: distcleancheck can only run from a VPATH build" ; \
	  exit 1 ; \
	fi
	@test `$(distcleancheck_listfiles) | wc -l` -eq 0 \
	  || { echo "ERROR: files left in build directory after distclean:" ; \
	       $(distcleancheck_listfiles) ; \
	       exit 1; } >&2
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) $(check_PROGRAMS) \
	  $(dist_check_SCRIPTS)
	$(MAKE) $(AM_MAKEFLAGS) check-TESTS
check: check-recursive
all-am: Makefile $(LIBRARIES) config.h
installdirs: installdirs-recursive
installdirs-am:
install: install-recursive
install-exec: install-exec-recursive
install-data: install-data-recursive
uninstall: uninstall-recursive

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-recursive
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)
	-test -z "$(DISTCLEANFILES)" || rm -f $(DISTCLEANFILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-recursive

clean-am: clean-checkPROGRAMS clean-generic clean-noinstLIBRARIES \
	mostlyclean-am

distclean: distclean-recursive
	-rm -f $(am__CONFIG_DISTCLEAN_FILES)
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-hdr distclean-tags

dvi: dvi-recursive

dvi-am:

html: html-recursive

html-am:

info: info-recursive

info-am:

install-data-am:

install-dvi: install-dvi-recursive

install-dvi-am:

install-exec-am:

install-html: install-html-recursive

install-html-am:

install-info: install-info-recursive

install-info-am:

install-man:

install-pdf: install-pdf-recursive

install-pdf-am:

install-ps: install-ps-recursive

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-recursive
	-rm -f $(am__CONFIG_DISTCLEAN_FILES)
	-rm -rf $(top_srcdir)/autom4te.cache
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-recursive

mostlyclean-am: mostlyclean-compile mostlyclean-generic

pdf: pdf-recursive

pdf-am:

ps: ps-recursive

ps-am:

uninstall-am:

.MAKE: $(RECURSIVE_CLEAN_TARGETS) $(RECURSIVE_TARGETS) all check-am \
	ctags-recursive install-am install-strip tags-recursive

.PHONY: $(RECURSIVE_CLEAN_TARGETS) $(RECURSIVE_TARGETS) CTAGS GTAGS \
	all all-am am--refresh check check-TESTS check-am clean \
	clean-checkPROGRAMS clean-generic clean-noinstLIBRARIES ctags \
	ctags-recursive dist dist-all dist-bzip2 dist-gzip dist-hook \
	dist-lzma dist-shar dist-tarZ dist-xz dist-zip distcheck \
	distclean distclean-compile distclean-generic distclean-hdr \
	distclean-tags distcleancheck distdir distuninstallcheck dvi \
	dvi-am html html-am info info-am install install-am \
	install-data install-data-am install-dvi install-dvi-am \
	install-exec install-exec-am install-html install-html-am \
	install-info install-info-am install-man install-pdf \
	install-pdf-am install-ps install-ps-am install-strip \
	installcheck installcheck-am installdirs installdirs-am \
	maintainer-clean maintainer-clean-generic mostlyclean \
	mostlyclean-compile mostlyclean-generic pdf pdf-am ps ps-am \
	tags tags-recursive uninstall uninstall-am


# Rebuild
.PHONY: rebuild
rebuild: all

# in case of an SVN repository
dist-hook:
	rm -rf `find $(distdir) -name .svn`
	rm -f $(distdir)/$(ZLIB_TREE)/zconf.h

$(libz_a_OBJECTS): zconf.h

zconf.h: $(ZLIB_TREE)/$(ZCONF_SRC) config.status
	echo '$(SHELL) ./config.status $@'
	$(SHELL) ./config.status $@

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
